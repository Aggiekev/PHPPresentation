name: PHPPresentation
on: [push, pull_request]
jobs:
  php-cs-fixer:
    name: PHP CS Fixer
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          extensions: mbstring, intl, gd, xml, dom, json, fileinfo, curl, zip, iconv
      - uses: actions/checkout@v2

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
              echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache Composer Directory
        uses: actions/cache@v2
        with:
              path: ${{ steps.composer-cache.outputs.dir }}
              key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
              restore-keys: |
                  ${{ runner.os }}-composer-
      -   name: Validate composer config
          run: composer validate --strict

      -   name: Composer Install
          run: composer install --ansi --prefer-dist --no-interaction --no-progress

      #-   name: Run PHPCSFixer
      #    run: ./vendor/bin/php-cs-fixer fix --dry-run --diff

  phpmd:
    name: PHP Mess Detector
    runs-on: ubuntu-latest
    steps:
        -   name: Setup PHP
            uses: shivammathur/setup-php@v2
            with:
                php-version: '7.4'
                extensions: gd, xml, zip
        -   uses: actions/checkout@v2

        -   name: Get Composer Cache Directory
            id: composer-cache
            run: |
                echo "::set-output name=dir::$(composer config cache-files-dir)"
        -   name: Cache Composer Directory
            uses: actions/cache@v2
            with:
                path: ${{ steps.composer-cache.outputs.dir }}
                key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                restore-keys: |
                    ${{ runner.os }}-composer-
        -   name: Composer Install
            run: composer install --ansi --prefer-dist --no-interaction --no-progress

        -   name: Run phpmd
            run: ./vendor/bin/phpmd src/,tests/ text ./phpmd.xml.dist

  phpstan:
    name: PHP Static Analysis
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
        -   name: Setup PHP
            uses: shivammathur/setup-php@v2
            with:
                php-version: '7.4'
                extensions: gd, xml, zip
        -   uses: actions/checkout@v2

        -   name: Get Composer Cache Directory
            id: composer-cache
            run: |
                echo "::set-output name=dir::$(composer config cache-files-dir)"
        -   name: Cache Composer Directory
            uses: actions/cache@v2
            with:
                path: ${{ steps.composer-cache.outputs.dir }}
                key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                restore-keys: |
                    ${{ runner.os }}-composer-
        -   name: Composer Install
            run: composer install --ansi --prefer-dist --no-interaction --no-progress

        #-   name: Run phpstan
        #    run: ./vendor/bin/phpstan analyse -c phpstan.neon.dist

  phpunit:
    name: PHPUnit
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: ['5.6', '7.0', '7.1', '7.2', '7.3']
            ## , '7.4', '8.0', '8.1'
    steps:
      -   name: Setup PHP
          uses: shivammathur/setup-php@v2
          with:
              php-version: ${{ matrix.php }}
              extensions: gd, xml, zip
              coverage: xdebug

      -   uses: actions/checkout@v2

      -   name: Get Composer Cache Directory
          id: composer-cache
          run: |
              echo "::set-output name=dir::$(composer config cache-files-dir)"
      -   name: Cache Composer Directory
          uses: actions/cache@v2
          with:
              path: ${{ steps.composer-cache.outputs.dir }}
              key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
              restore-keys: |
                  ${{ runner.os }}-composer-
      -   name: Composer Install
          run: composer install --ansi --prefer-dist --no-interaction --no-progress

      -   name: Run phpunit
          run: ./vendor/bin/phpunit -c phpunit.xml.dist --coverage-clover build/clover.xml

      -   name: Upload coverage results to Coveralls
          if: matrix.php-versions == '7.3'
          env:
            COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          run: |
            wget https://github.com/php-coveralls/php-coveralls/releases/download/v2.4.3/php-coveralls.phar
            chmod +x php-coveralls.phar
            php php-coveralls.phar --coverage_clover=build/clover.xml --json_path=build/coveralls-upload.json -vvv
